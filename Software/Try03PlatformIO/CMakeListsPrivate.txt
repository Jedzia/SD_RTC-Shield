# !!! WARNING !!! AUTO-GENERATED FILE, PLEASE DO NOT MODIFY IT AND USE
# https://docs.platformio.org/page/projectconf/section_env_build.html#build-flags
#
# If you need to override existing CMake configuration or add extra,
# please create `CMakeListsUser.txt` in the root of project.
# The `CMakeListsUser.txt` will not be overwritten by PlatformIO.


set(CMAKE_CONFIGURATION_TYPES "nucleo_f401re" CACHE STRING "" FORCE)

set(PLATFORMIO_CMD "C:/Python/Python37/Scripts/platformio.exe")
set(SVD_PATH "$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/platforms/ststm32/misc/svd/STM32F401xE.svd")

SET(CMAKE_C_COMPILER "$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/toolchain-gccarmnoneeabi/bin/arm-none-eabi-gcc.exe")
SET(CMAKE_CXX_COMPILER "$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/toolchain-gccarmnoneeabi/bin/arm-none-eabi-g++.exe")
SET(CMAKE_CXX_FLAGS_DISTRIBUTION "-std=c++2a -std=gnu++14 -fno-rtti -Wvla -c -Wall -Wextra -Wno-unused-parameter -Wno-missing-field-initializers -fmessage-length=0 -fno-exceptions -ffunction-sections -fdata-sections -funsigned-char -MMD -fno-delete-null-pointer-checks -fomit-frame-pointer -Os -g -DMBED_TRAP_ERRORS_ENABLED=1 -mcpu=cortex-m4 -mthumb -mfpu=fpv4-sp-d16 -mfloat-abi=softfp -DMBED_ROM_START=0x8000000 -DMBED_ROM_SIZE=0x80000 -DMBED_RAM_START=0x20000000 -DMBED_RAM_SIZE=0x18000 -include mbed_config.h")
SET(CMAKE_C_FLAGS_DISTRIBUTION "-c -Wall -Wextra -Wno-unused-parameter -Wno-missing-field-initializers -fmessage-length=0 -fno-exceptions -ffunction-sections -fdata-sections -funsigned-char -MMD -fno-delete-null-pointer-checks -fomit-frame-pointer -Os -g -DMBED_TRAP_ERRORS_ENABLED=1 -mcpu=cortex-m4 -mthumb -mfpu=fpv4-sp-d16 -mfloat-abi=softfp -DMBED_ROM_START=0x8000000 -DMBED_ROM_SIZE=0x80000 -DMBED_RAM_START=0x20000000 -DMBED_RAM_SIZE=0x18000 -include mbed_config.h")

set(CMAKE_CXX_STANDARD 14)

if (CMAKE_BUILD_TYPE MATCHES "nucleo_f401re")
    add_definitions(-D'PLATFORMIO=40100')
    add_definitions(-D'STM32F4')
    add_definitions(-D'STM32F401xE')
    add_definitions(-D'STM32F40_41xxx')
    add_definitions(-D'ARM_MATH_CM4')
    add_definitions(-D'COMPONENT_NSPE=1')
    add_definitions(-D'COMPONENT_PSA_SRV_EMUL=1')
    add_definitions(-D'COMPONENT_PSA_SRV_IMPL=1')
    add_definitions(-D'DEVICE_ANALOGIN=1')
    add_definitions(-D'DEVICE_FLASH=1')
    add_definitions(-D'DEVICE_I2C=1')
    add_definitions(-D'DEVICE_I2CSLAVE=1')
    add_definitions(-D'DEVICE_I2C_ASYNCH=1')
    add_definitions(-D'DEVICE_INTERRUPTIN=1')
    add_definitions(-D'DEVICE_LPTICKER=1')
    add_definitions(-D'DEVICE_MPU=1')
    add_definitions(-D'DEVICE_PORTIN=1')
    add_definitions(-D'DEVICE_PORTINOUT=1')
    add_definitions(-D'DEVICE_PORTOUT=1')
    add_definitions(-D'DEVICE_PWMOUT=1')
    add_definitions(-D'DEVICE_RESET_REASON=1')
    add_definitions(-D'DEVICE_RTC=1')
    add_definitions(-D'DEVICE_SERIAL=1')
    add_definitions(-D'DEVICE_SERIAL_ASYNCH=1')
    add_definitions(-D'DEVICE_SERIAL_FC=1')
    add_definitions(-D'DEVICE_SLEEP=1')
    add_definitions(-D'DEVICE_SPI=1')
    add_definitions(-D'DEVICE_SPISLAVE=1')
    add_definitions(-D'DEVICE_SPI_ASYNCH=1')
    add_definitions(-D'DEVICE_STDIO_MESSAGES=1')
    add_definitions(-D'DEVICE_USTICKER=1')
    add_definitions(-D'DEVICE_WATCHDOG=1')
    add_definitions(-D'TARGET_CORTEX')
    add_definitions(-D'TARGET_CORTEX_M')
    add_definitions(-D'TARGET_FAMILY_STM32')
    add_definitions(-D'TARGET_FF_ARDUINO')
    add_definitions(-D'TARGET_FF_MORPHO')
    add_definitions(-D'TARGET_LIKE_CORTEX_M4')
    add_definitions(-D'TARGET_LIKE_MBED')
    add_definitions(-D'TARGET_M4')
    add_definitions(-D'TARGET_NAME=NUCLEO_F401RE')
    add_definitions(-D'TARGET_NUCLEO_F401RE')
    add_definitions(-D'TARGET_RELEASE')
    add_definitions(-D'TARGET_RTOS_M4_M7')
    add_definitions(-D'TARGET_STM')
    add_definitions(-D'TARGET_STM32F4')
    add_definitions(-D'TARGET_STM32F401RE')
    add_definitions(-D'TARGET_STM32F401xE')
    add_definitions(-D'TOOLCHAIN_GCC')
    add_definitions(-D'TOOLCHAIN_GCC_ARM')
    add_definitions(-D'TRANSACTION_QUEUE_SIZE_SPI=2')
    add_definitions(-D'USBHOST_OTHER')
    add_definitions(-D'USB_STM_HAL')
    add_definitions(-D'USE_FULL_LL_DRIVER')
    add_definitions(-D'USE_HAL_DRIVER')
    add_definitions(-D'__CMSIS_RTOS')
    add_definitions(-D'__CORTEX_M4')
    add_definitions(-D'__FPU_PRESENT=1')
    add_definitions(-D'__MBED_CMSIS_RTOS_CM')
    add_definitions(-D'__MBED__=1')

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/src")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/nucleo_f401re/Adafruit_RTCLib_ID3122")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-mbed/cmsis/TARGET_CORTEX_M")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-mbed")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/build/nucleo_f401re")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-mbed/drivers")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-mbed/drivers/internal")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-mbed/events")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-mbed/events/internal")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-mbed/hal")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-mbed/hal/storage_abstraction")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-mbed/hal/usb")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-mbed/platform")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-mbed/platform/cxxsupport")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-mbed/platform/internal")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-mbed/platform/source")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-mbed/platform/source/TARGET_CORTEX_M")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-mbed/platform/source/minimal-printf")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-mbed/targets/TARGET_STM")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-mbed/targets/TARGET_STM/TARGET_STM32F4")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-mbed/targets/TARGET_STM/TARGET_STM32F4/TARGET_STM32F401xE")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-mbed/targets/TARGET_STM/TARGET_STM32F4/TARGET_STM32F401xE/TARGET_NUCLEO_F401RE")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-mbed/targets/TARGET_STM/TARGET_STM32F4/TARGET_STM32F401xE/device")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-mbed/targets/TARGET_STM/TARGET_STM32F4/device")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-mbed/features/unsupported/dsp")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/features/unsupported/dsp")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-mbed/features/unsupported/dsp/cmsis_dsp")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-mbed/features/unsupported/dsp/dsp")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-mbed/features/unsupported/rpc")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/features/unsupported/rpc")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-mbed/features/unsupported/USBDevice")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/features/unsupported/USBDevice")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-mbed/features/unsupported/USBDevice/USBAudio")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-mbed/features/unsupported/USBDevice/USBDevice")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-mbed/features/unsupported/USBDevice/USBHID")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-mbed/features/unsupported/USBDevice/USBMIDI")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-mbed/features/unsupported/USBDevice/USBMSD")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-mbed/features/unsupported/USBDevice/USBSerial")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-mbed/features/unsupported/USBDevice/targets/TARGET_STM")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-mbed/features/unsupported/USBHost")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/features/unsupported/USBHost")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-mbed/features/unsupported/USBHost/USBHost")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-mbed/features/unsupported/USBHost/USBHost3GModule")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-mbed/features/unsupported/USBHost/USBHostHID")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-mbed/features/unsupported/USBHost/USBHostHub")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-mbed/features/unsupported/USBHost/USBHostMIDI")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-mbed/features/unsupported/USBHost/USBHostMSD")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-mbed/features/unsupported/USBHost/USBHostSerial")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/framework-mbed/features/unsupported/USBHost/targets/TARGET_STM")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/8.2.1")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/8.2.1/arm-none-eabi")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/8.2.1/include")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/8.2.1/include-fixed")
    include_directories("$ENV{HOMEDRIVE}$ENV{HOMEPATH}/.platformio/packages/tool-unity")
endif()

FILE(GLOB_RECURSE SRC_LIST "${CMAKE_CURRENT_LIST_DIR}/src/*.*" "${CMAKE_CURRENT_LIST_DIR}/lib/*.*" "${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/nucleo_f401re/*.*")
